[{"/Users/zetachua/Documents/GitHub/DanceMarketplace/src/index.js":"1","/Users/zetachua/Documents/GitHub/DanceMarketplace/src/reportWebVitals.js":"2","/Users/zetachua/Documents/GitHub/DanceMarketplace/src/App.js":"3","/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/PortfolioCard/PortfolioCard.js":"4","/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/GradientBackground/GradientBackground.js":"5","/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/ScreenrecordToGif/screenRecordToGif.js":"6","/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/GrainyBackground/GrainyBackground.js":"7","/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/GrainyBackground/BlobComponent.js":"8","/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/GrainyBackground/GrainyBackground.styles.js":"9"},{"size":535,"mtime":1689322696599,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1689322696599,"results":"12","hashOfConfig":"11"},{"size":1127,"mtime":1703839303471,"results":"13","hashOfConfig":"11"},{"size":1585,"mtime":1703840630984,"results":"14","hashOfConfig":"11"},{"size":2952,"mtime":1689851866307,"results":"15","hashOfConfig":"11"},{"size":4703,"mtime":1702106322690,"results":"16","hashOfConfig":"11"},{"size":6629,"mtime":1703839034404,"results":"17","hashOfConfig":"11"},{"size":580,"mtime":1703839281839,"results":"18","hashOfConfig":"11"},{"size":316,"mtime":1703840298556,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"3rn85u",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zetachua/Documents/GitHub/DanceMarketplace/src/index.js",[],[],[],"/Users/zetachua/Documents/GitHub/DanceMarketplace/src/reportWebVitals.js",[],[],"/Users/zetachua/Documents/GitHub/DanceMarketplace/src/App.js",["50","51","52"],[],"/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/PortfolioCard/PortfolioCard.js",["53","54","55","56"],[],"/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/GradientBackground/GradientBackground.js",["57","58"],[],"import React from 'react'\nimport { cubicCoordinates, stepsCoordinates } from 'easing-coordinates'\nimport { useSpring, animated, to as interpolate, createInterpolator } from '@react-spring/web'\nimport { useControls } from 'leva'\nimport { prependOnceListener } from 'process'\nconst easeMap = {\n    'ease-in-out': { x1: 0.42, y1: 0, x2: 0.58, y2: 1 },\n    'ease-out': { x1: 0, y1: 0, x2: 0.58, y2: 1 },\n    'ease-in': { x1: 0.42, y1: 0, x2: 1, y2: 1 },\n    ease: { x1: 0.25, y1: 0.1, x2: 0.25, y2: 1 },\n    linear: { x1: 0.25, y1: 0.25, x2: 0.75, y2: 0.75 },\n  }\n  \n\nexport default function GradientBackground(props){\n    //Leva component \n    // const { from, mid, to, angle, stops, easeCustom, easing } = useControls({\n    //     from: '#0bd1ff',\n    //     mid: '#ffa3ff',\n    //     to: '#ffd34e',\n    //     angle: {\n    //       value: 32,\n    //       min: 0,\n    //       max: 360,\n    //     },\n    //     stops: {\n    //       value: 5,\n    //       max: 100,\n    //       min: 2,\n    //     },\n    //     easing: {\n    //       value: 'ease-in-out',\n    //       options: ['linear', 'ease', 'ease-in', 'ease-out', 'ease-in-out', 'steps'],\n    //     },\n    //     easeCustom: '',\n    //   })\n    const from = '#fff'; //#0bd1ff\n    const mid = '#ffccfe'; //#ffa3ff\n    const to = '#d9d1f2'; //#ffd34e\n    const angle = 32;\n    const stops = 5;\n    const easing = 'ease-in-out';\n    const easeCustom = '';\n    \n      const { colorFrom, colorMid, colorTo } = useSpring({\n        colorFrom: from,\n        colorMid: mid,\n        colorTo: to,\n      })\n    \n      const coordinates = React.useMemo(() => {\n        let coordinates\n        const customBezier = easeCustom.split(',').map(Number)\n        if (customBezier.length <= 1) {\n          if (easing === 'steps') {\n            coordinates = stepsCoordinates(stops, 'skip-none')\n          } else {\n            const { x1, y1, x2, y2 } = easeMap[easing]\n            coordinates = cubicCoordinates(x1, y1, x2, y2, stops)\n          }\n        } else {\n          coordinates = cubicCoordinates(customBezier[0], customBezier[1], customBezier[2], customBezier[3], stops)\n        }\n    \n        return coordinates\n      }, [easing, easeCustom, stops])\n    \n      const allStops = interpolate([colorFrom, colorMid, colorTo], (from, mid, to) => {\n        const blend = createInterpolator({ range: [0, 0.5, 1], output: [from, mid, to] })\n    \n        return coordinates.map(({ x, y }) => {\n          const color = blend(y)\n    \n          return `${color} ${x * 100}%`\n        })\n      })\n    \n    return(\n        <animated.div \n        style={{\n            width: props.width,\n            height:props.height,\n            borderRadius:props.borderRadius,\n            opacity:props.opacity,\n            backgroundImage: allStops.to((...args) => `linear-gradient(${angle}deg, ${args.join(', ')})`),\n          }}>\n            <h2 style={{display:props.display}}>{props.name}</h2>\n\n        </animated.div>\n    )\n}","/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/ScreenrecordToGif/screenRecordToGif.js",["59","60"],[],"import React, { useRef, useState } from 'react';\nimport GIF from 'gif.js-upgrade';\nimport { Cloudinary } from \"@cloudinary/url-gen\";\nimport { AdvancedVideo } from '@cloudinary/react';\nimport { fill } from \"@cloudinary/url-gen/actions/resize\";\n\nconst ScreenRecorderWithGIFConversion = () => {\n  const videoRef = useRef();\n  const [recording, setRecording] = useState(false);\n  const [videoUrl, setVideoUrl] = useState(null); // Use videoUrl state\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: {\n          aspectRatio: 480 / 820, // Set the aspect ratio for portrait mode\n        },\n      });\n      const recorder = new MediaRecorder(stream);\n\n      const chunks = [];\n      recorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n\n      recorder.onstop = () => {\n        const webmBlob = new Blob(chunks, { type: 'video/webm' });\n        const webmUrl = URL.createObjectURL(webmBlob);\n        setVideoUrl(webmUrl); // Update videoUrl state instead of manipulating videoRef.current.src\n\n        convertWebMToGIF(webmBlob);\n      };\n\n      recorder.start();\n      setRecording(true);\n\n      setTimeout(() => {\n        recorder.stop();\n        stream.getTracks().forEach((track) => track.stop());\n        setRecording(false);\n      }, 5000); // Recording for exactly 5 seconds\n    } catch (error) {\n      console.error('Error starting recording:', error);\n    }\n  };\n\n  const convertWebMToGIF = (webmBlob) => {\n    const videoElement = document.createElement('video');\n    videoElement.src = URL.createObjectURL(webmBlob);\n    videoElement.addEventListener('loadeddata', async () => {\n      const gif = new GIF({ workers: 2, quality: 10 });\n      const originalCanvas = document.createElement('canvas');\n      const originalCtx = originalCanvas.getContext('2d');\n\n      const processingCanvas = document.createElement('canvas');\n      const processingCtx = processingCanvas.getContext('2d');\n\n      // Set original canvas dimensions to the video dimensions\n      originalCanvas.width = videoElement.videoWidth;\n      originalCanvas.height = videoElement.videoHeight;\n\n      // Set processing canvas dimensions to the desired aspect ratio\n      const aspectRatio = 9 / 16; // Example: 9:16 for portrait mode\n      processingCanvas.width = videoElement.videoWidth;\n      processingCanvas.height = videoElement.videoWidth * aspectRatio;\n\n      const frameDuration = 40; // Adjust the delay as needed (25 frames per second)\n\n      let currentTime = 0;\n\n      const processFrame = () => {\n        originalCtx.drawImage(\n          videoElement,\n          0,\n          0,\n          videoElement.videoWidth,\n          videoElement.videoHeight\n        );\n\n        // Crop the frame to achieve the desired aspect ratio\n        const cropY = (videoElement.videoHeight - videoElement.videoWidth * aspectRatio) / 2;\n        originalCtx.drawImage(\n          originalCanvas,\n          0,\n          cropY,\n          originalCanvas.width,\n          originalCanvas.height - 2 * cropY,\n          0,\n          0,\n          processingCanvas.width,\n          processingCanvas.height\n        );\n\n        // Get the current frame as imageData\n        const imageData = originalCtx.getImageData(0, 0, processingCanvas.width, processingCanvas.height);\n\n        // Add the imageData as a frame to the GIF\n        gif.addFrame(imageData, { delay: frameDuration });\n\n        // Update the currentTime for the next frame\n        currentTime += frameDuration / 1000;\n\n        // Request the next frame\n        if (currentTime < videoElement.duration) {\n          requestAnimationFrame(processFrame);\n        } else {\n          // Finish and render the GIF when all frames are processed\n          gif.on('finished', (blob) => {\n            const gifUrl = URL.createObjectURL(blob);\n            setVideoUrl(gifUrl); // Update videoUrl state instead of manipulating videoRef.current.src\n          });\n\n          gif.render();\n        }\n      };\n\n      // Start processing frames\n      processFrame();\n    });\n  };\n\n  const cld = new Cloudinary({\n    cloud: {\n      cloudName: 'dymsz1apj',\n    }\n  });\n\n  const mobile = cld\n    .video(\"demo4\")\n    .resize(fill().width(400).aspectRatio(\"9:16\"));\n\n  return (\n    <div>\n      <button onClick={startRecording} disabled={recording}>\n        {recording ? 'Recording...' : 'Start Recording'}\n      </button>\n      {videoUrl && (\n        <div>\n          <AdvancedVideo\n          cldVid={mobile}\n          autoPlay\n          loop\n          />\n        </div>\n    \n      )}\n    </div>\n  );\n};\n\nexport default ScreenRecorderWithGIFConversion;\n","/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/GrainyBackground/GrainyBackground.js",["61","62","63","64"],[],"/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/GrainyBackground/BlobComponent.js",[],[],"/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/GrainyBackground/GrainyBackground.styles.js",[],[],{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":12},{"ruleId":"65","severity":1,"message":"69","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":26},{"ruleId":"65","severity":1,"message":"70","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":24},{"ruleId":"65","severity":1,"message":"71","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":26},{"ruleId":"65","severity":1,"message":"72","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":39},{"ruleId":"65","severity":1,"message":"73","line":27,"column":11,"nodeType":"67","messageId":"68","endLine":27,"endColumn":25},{"ruleId":"65","severity":1,"message":"74","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":21},{"ruleId":"65","severity":1,"message":"75","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":29},{"ruleId":"65","severity":1,"message":"76","line":8,"column":9,"nodeType":"67","messageId":"68","endLine":8,"endColumn":17},{"ruleId":"65","severity":1,"message":"77","line":58,"column":13,"nodeType":"67","messageId":"68","endLine":58,"endColumn":26},{"ruleId":"65","severity":1,"message":"78","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":21},{"ruleId":"65","severity":1,"message":"79","line":5,"column":10,"nodeType":"67","messageId":"68","endLine":5,"endColumn":22},{"ruleId":"65","severity":1,"message":"80","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":27},{"ruleId":"65","severity":1,"message":"69","line":7,"column":8,"nodeType":"67","messageId":"68","endLine":7,"endColumn":26},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'GradientBackground' is defined but never used.","'GrainyBackground' is defined but never used.","'useState' is defined but never used.","'ScreenRecorderWithGIFConversion' is defined but never used.","'PortfolioTitle' is assigned a value but never used.","'useControls' is defined but never used.","'prependOnceListener' is defined but never used.","'videoRef' is assigned a value but never used.","'processingCtx' is assigned a value but never used.","'PortfolioCard' is defined but never used.","'SvgPortfolio' is defined but never used.","'backgroundRemoval' is defined but never used."]