{"ast":null,"code":"import _slicedToArray from \"/Users/zetachua/Documents/GitHub/DanceMarketplace/dancermarketplace/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { cubicCoordinates } from './lib/cubic-coordinates';\nimport easingShorthandMap from './lib/easing-map';\nimport * as shared from './lib/shared';\nimport { stepsCoordinates } from './lib/steps-coordinates';\nfunction easingCoordinates(easingFunction, polySteps) {\n  var errorMsgStart = \"Error parsing \\\"\".concat(easingFunction, \"\\\".\");\n  // If a shorthand like \"ease-in\" is provided then convert to equivalent cubic-bezier\n  if (easingShorthandMap[easingFunction]) {\n    easingFunction = easingShorthandMap[easingFunction];\n  }\n  // If we think it's a steps function\n  if (easingFunction.includes('steps(')) {\n    var args = shared.getFunctionArguments(easingFunction);\n    var _args = _slicedToArray(args, 2),\n      stepCount = _args[0],\n      stepSkip = _args[1];\n    if (args.length < 1 || args.length > 2) {\n      throw new Error(\"\".concat(errorMsgStart, \" Got \").concat(args.length, \" arguments but expected 1 or 2.\"));\n    } else {\n      if (typeof args[0] !== 'number') {\n        throw new Error(\"\".concat(errorMsgStart, \" \\\"\").concat(args[0], \"\\\" is not a number.\"));\n      } else if (args.length === 2 && typeof args[1] !== 'string') {\n        throw new Error(\"\".concat(errorMsgStart, \" \\\"\").concat(args[1], \"\\\" is not a string.\"));\n      }\n      return stepsCoordinates(stepCount, stepSkip);\n    }\n    // If we think it's a cubic-bezier function\n  } else if (easingFunction.includes('cubic-bezier(')) {\n    var _args2 = shared.getFunctionArguments(easingFunction);\n    var _args3 = _slicedToArray(_args2, 4),\n      x1 = _args3[0],\n      y1 = _args3[1],\n      x2 = _args3[2],\n      y2 = _args3[3];\n    if (_args2.length !== 4) {\n      throw new Error(\"\".concat(errorMsgStart, \" Got \").concat(_args2.length, \" arguments but expected 4.\"));\n    } else {\n      _args2.forEach(function (arg) {\n        if (typeof arg !== 'number') {\n          throw new Error(\"\".concat(errorMsgStart, \" \\\"\").concat(arg, \"\\\" is not a number.\"));\n        }\n      });\n      return cubicCoordinates(x1, y1, x2, y2, polySteps);\n    }\n    // If it's not cubic bezier or steps it's not an easing function\n  } else {\n    throw new Error(\"\".concat(errorMsgStart, \" If not a typo then please create a GitHub issue :)\"));\n  }\n}\nexport { stepsCoordinates, cubicCoordinates, easingCoordinates, easingCoordinates as default };","map":{"version":3,"names":["cubicCoordinates","easingShorthandMap","shared","stepsCoordinates","easingCoordinates","easingFunction","polySteps","errorMsgStart","concat","includes","args","getFunctionArguments","_args","_slicedToArray","stepCount","stepSkip","length","Error","_args3","x1","y1","x2","y2","forEach","arg","default"],"sources":["/Users/zetachua/Documents/GitHub/DanceMarketplace/dancermarketplace/node_modules/easing-coordinates/dist/index.js"],"sourcesContent":["import { cubicCoordinates } from './lib/cubic-coordinates'\nimport easingShorthandMap from './lib/easing-map'\nimport * as shared from './lib/shared'\nimport { stepsCoordinates } from './lib/steps-coordinates'\nfunction easingCoordinates(easingFunction, polySteps) {\n  const errorMsgStart = `Error parsing \"${easingFunction}\".`\n  // If a shorthand like \"ease-in\" is provided then convert to equivalent cubic-bezier\n  if (easingShorthandMap[easingFunction]) {\n    easingFunction = easingShorthandMap[easingFunction]\n  }\n  // If we think it's a steps function\n  if (easingFunction.includes('steps(')) {\n    const args = shared.getFunctionArguments(easingFunction)\n    const [stepCount, stepSkip] = args\n    if (args.length < 1 || args.length > 2) {\n      throw new Error(`${errorMsgStart} Got ${args.length} arguments but expected 1 or 2.`)\n    } else {\n      if (typeof args[0] !== 'number') {\n        throw new Error(`${errorMsgStart} \"${args[0]}\" is not a number.`)\n      } else if (args.length === 2 && typeof args[1] !== 'string') {\n        throw new Error(`${errorMsgStart} \"${args[1]}\" is not a string.`)\n      }\n      return stepsCoordinates(stepCount, stepSkip)\n    }\n    // If we think it's a cubic-bezier function\n  } else if (easingFunction.includes('cubic-bezier(')) {\n    const args = shared.getFunctionArguments(easingFunction)\n    const [x1, y1, x2, y2] = args\n    if (args.length !== 4) {\n      throw new Error(`${errorMsgStart} Got ${args.length} arguments but expected 4.`)\n    } else {\n      args.forEach(arg => {\n        if (typeof arg !== 'number') {\n          throw new Error(`${errorMsgStart} \"${arg}\" is not a number.`)\n        }\n      })\n      return cubicCoordinates(x1, y1, x2, y2, polySteps)\n    }\n    // If it's not cubic bezier or steps it's not an easing function\n  } else {\n    throw new Error(`${errorMsgStart} If not a typo then please create a GitHub issue :)`)\n  }\n}\nexport { stepsCoordinates, cubicCoordinates, easingCoordinates, easingCoordinates as default }\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,yBAAyB;AAC1D,OAAOC,kBAAkB,MAAM,kBAAkB;AACjD,OAAO,KAAKC,MAAM,MAAM,cAAc;AACtC,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,iBAAiBA,CAACC,cAAc,EAAEC,SAAS,EAAE;EACpD,IAAMC,aAAa,sBAAAC,MAAA,CAAqBH,cAAc,QAAI;EAC1D;EACA,IAAIJ,kBAAkB,CAACI,cAAc,CAAC,EAAE;IACtCA,cAAc,GAAGJ,kBAAkB,CAACI,cAAc,CAAC;EACrD;EACA;EACA,IAAIA,cAAc,CAACI,QAAQ,CAAC,QAAQ,CAAC,EAAE;IACrC,IAAMC,IAAI,GAAGR,MAAM,CAACS,oBAAoB,CAACN,cAAc,CAAC;IACxD,IAAAO,KAAA,GAAAC,cAAA,CAA8BH,IAAI;MAA3BI,SAAS,GAAAF,KAAA;MAAEG,QAAQ,GAAAH,KAAA;IAC1B,IAAIF,IAAI,CAACM,MAAM,GAAG,CAAC,IAAIN,IAAI,CAACM,MAAM,GAAG,CAAC,EAAE;MACtC,MAAM,IAAIC,KAAK,IAAAT,MAAA,CAAID,aAAa,WAAAC,MAAA,CAAQE,IAAI,CAACM,MAAM,oCAAiC,CAAC;IACvF,CAAC,MAAM;MACL,IAAI,OAAON,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;QAC/B,MAAM,IAAIO,KAAK,IAAAT,MAAA,CAAID,aAAa,SAAAC,MAAA,CAAKE,IAAI,CAAC,CAAC,CAAC,wBAAoB,CAAC;MACnE,CAAC,MAAM,IAAIA,IAAI,CAACM,MAAM,KAAK,CAAC,IAAI,OAAON,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;QAC3D,MAAM,IAAIO,KAAK,IAAAT,MAAA,CAAID,aAAa,SAAAC,MAAA,CAAKE,IAAI,CAAC,CAAC,CAAC,wBAAoB,CAAC;MACnE;MACA,OAAOP,gBAAgB,CAACW,SAAS,EAAEC,QAAQ,CAAC;IAC9C;IACA;EACF,CAAC,MAAM,IAAIV,cAAc,CAACI,QAAQ,CAAC,eAAe,CAAC,EAAE;IACnD,IAAMC,MAAI,GAAGR,MAAM,CAACS,oBAAoB,CAACN,cAAc,CAAC;IACxD,IAAAa,MAAA,GAAAL,cAAA,CAAyBH,MAAI;MAAtBS,EAAE,GAAAD,MAAA;MAAEE,EAAE,GAAAF,MAAA;MAAEG,EAAE,GAAAH,MAAA;MAAEI,EAAE,GAAAJ,MAAA;IACrB,IAAIR,MAAI,CAACM,MAAM,KAAK,CAAC,EAAE;MACrB,MAAM,IAAIC,KAAK,IAAAT,MAAA,CAAID,aAAa,WAAAC,MAAA,CAAQE,MAAI,CAACM,MAAM,+BAA4B,CAAC;IAClF,CAAC,MAAM;MACLN,MAAI,CAACa,OAAO,CAAC,UAAAC,GAAG,EAAI;QAClB,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;UAC3B,MAAM,IAAIP,KAAK,IAAAT,MAAA,CAAID,aAAa,SAAAC,MAAA,CAAKgB,GAAG,wBAAoB,CAAC;QAC/D;MACF,CAAC,CAAC;MACF,OAAOxB,gBAAgB,CAACmB,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEhB,SAAS,CAAC;IACpD;IACA;EACF,CAAC,MAAM;IACL,MAAM,IAAIW,KAAK,IAAAT,MAAA,CAAID,aAAa,wDAAqD,CAAC;EACxF;AACF;AACA,SAASJ,gBAAgB,EAAEH,gBAAgB,EAAEI,iBAAiB,EAAEA,iBAAiB,IAAIqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}