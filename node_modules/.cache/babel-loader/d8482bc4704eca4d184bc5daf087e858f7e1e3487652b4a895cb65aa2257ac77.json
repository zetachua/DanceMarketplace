{"ast":null,"code":"import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @description A class to round one or more corners of an image or video.\n * @extends SDK.Action\n * @memberOf Actions.RoundCorners\n * @see Visit {@link Actions.RoundCorners|RoundCorners} for an example\n */\nclass RoundCornersAction extends Action {\n  constructor() {\n    super();\n    this._actionModel = {};\n    this._actionModel.actionType = 'roundCorners';\n  }\n  /**\n   * @param {number} a\n   * @param {number} b\n   * @param {number} c\n   * @param {number} d\n   * @return {RoundCornersAction}\n   */\n  radius(a, b, c, d) {\n    const qualifierValue = new QualifierValue();\n    // In case a === 0, check typeof\n    a !== undefined && qualifierValue.addValue(a);\n    b !== undefined && qualifierValue.addValue(b);\n    c !== undefined && qualifierValue.addValue(c);\n    d !== undefined && qualifierValue.addValue(d);\n    const definedRadiuses = [a, b, c, d].filter(r => r !== undefined);\n    this._radius = definedRadiuses;\n    this._actionModel.radius = definedRadiuses;\n    this.addQualifier(new Qualifier('r').addValue(qualifierValue));\n    return this;\n  }\n  /**\n   * @description Applies maximum rounding to the corners of the asset. An asset with square dimensions becomes a circle.\n   */\n  max() {\n    this._radius = 'max';\n    this._actionModel.radius = 'max';\n    return this.addQualifier(new Qualifier('r', 'max'));\n  }\n  getRadius() {\n    return this._radius;\n  }\n  static fromJson(actionModel) {\n    const {\n      radius\n    } = actionModel;\n    // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n    // This allows the inheriting classes to determine the class to be created\n    const result = new this();\n    if (Array.isArray(radius)) {\n      result.radius(radius[0], radius[1], radius[2], radius[3]);\n    }\n    if (radius === 'max') {\n      result.max();\n    }\n    return result;\n  }\n}\nexport default RoundCornersAction;","map":{"version":3,"names":["Action","Qualifier","QualifierValue","RoundCornersAction","constructor","_actionModel","actionType","radius","a","b","c","d","qualifierValue","undefined","addValue","definedRadiuses","filter","r","_radius","addQualifier","max","getRadius","fromJson","actionModel","result","Array","isArray"],"sources":["/Users/zetachua/Documents/GitHub/DanceMarketplace/node_modules/@cloudinary/transformation-builder-sdk/actions/roundCorners/RoundCornersAction.js"],"sourcesContent":["import { Action } from \"../../internal/Action.js\";\nimport { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\n/**\n * @description A class to round one or more corners of an image or video.\n * @extends SDK.Action\n * @memberOf Actions.RoundCorners\n * @see Visit {@link Actions.RoundCorners|RoundCorners} for an example\n */\nclass RoundCornersAction extends Action {\n    constructor() {\n        super();\n        this._actionModel = {};\n        this._actionModel.actionType = 'roundCorners';\n    }\n    /**\n     * @param {number} a\n     * @param {number} b\n     * @param {number} c\n     * @param {number} d\n     * @return {RoundCornersAction}\n     */\n    radius(a, b, c, d) {\n        const qualifierValue = new QualifierValue();\n        // In case a === 0, check typeof\n        a !== undefined && qualifierValue.addValue(a);\n        b !== undefined && qualifierValue.addValue(b);\n        c !== undefined && qualifierValue.addValue(c);\n        d !== undefined && qualifierValue.addValue(d);\n        const definedRadiuses = [a, b, c, d].filter((r) => r !== undefined);\n        this._radius = definedRadiuses;\n        this._actionModel.radius = definedRadiuses;\n        this.addQualifier(new Qualifier('r').addValue(qualifierValue));\n        return this;\n    }\n    /**\n     * @description Applies maximum rounding to the corners of the asset. An asset with square dimensions becomes a circle.\n     */\n    max() {\n        this._radius = 'max';\n        this._actionModel.radius = 'max';\n        return this.addQualifier(new Qualifier('r', 'max'));\n    }\n    getRadius() {\n        return this._radius;\n    }\n    static fromJson(actionModel) {\n        const { radius } = actionModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [actionModel])\n        // This allows the inheriting classes to determine the class to be created\n        const result = new this();\n        if (Array.isArray(radius)) {\n            result.radius(radius[0], radius[1], radius[2], radius[3]);\n        }\n        if (radius === 'max') {\n            result.max();\n        }\n        return result;\n    }\n}\nexport default RoundCornersAction;\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,0BAA0B;AACjD,SAASC,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,4CAA4C;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,kBAAkB,SAASH,MAAM,CAAC;EACpCI,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,YAAY,GAAG,CAAC,CAAC;IACtB,IAAI,CAACA,YAAY,CAACC,UAAU,GAAG,cAAc;EACjD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,MAAMA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE;IACf,MAAMC,cAAc,GAAG,IAAIV,cAAc,CAAC,CAAC;IAC3C;IACAM,CAAC,KAAKK,SAAS,IAAID,cAAc,CAACE,QAAQ,CAACN,CAAC,CAAC;IAC7CC,CAAC,KAAKI,SAAS,IAAID,cAAc,CAACE,QAAQ,CAACL,CAAC,CAAC;IAC7CC,CAAC,KAAKG,SAAS,IAAID,cAAc,CAACE,QAAQ,CAACJ,CAAC,CAAC;IAC7CC,CAAC,KAAKE,SAAS,IAAID,cAAc,CAACE,QAAQ,CAACH,CAAC,CAAC;IAC7C,MAAMI,eAAe,GAAG,CAACP,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,CAACK,MAAM,CAAEC,CAAC,IAAKA,CAAC,KAAKJ,SAAS,CAAC;IACnE,IAAI,CAACK,OAAO,GAAGH,eAAe;IAC9B,IAAI,CAACV,YAAY,CAACE,MAAM,GAAGQ,eAAe;IAC1C,IAAI,CAACI,YAAY,CAAC,IAAIlB,SAAS,CAAC,GAAG,CAAC,CAACa,QAAQ,CAACF,cAAc,CAAC,CAAC;IAC9D,OAAO,IAAI;EACf;EACA;AACJ;AACA;EACIQ,GAAGA,CAAA,EAAG;IACF,IAAI,CAACF,OAAO,GAAG,KAAK;IACpB,IAAI,CAACb,YAAY,CAACE,MAAM,GAAG,KAAK;IAChC,OAAO,IAAI,CAACY,YAAY,CAAC,IAAIlB,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;EACvD;EACAoB,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACH,OAAO;EACvB;EACA,OAAOI,QAAQA,CAACC,WAAW,EAAE;IACzB,MAAM;MAAEhB;IAAO,CAAC,GAAGgB,WAAW;IAC9B;IACA;IACA,MAAMC,MAAM,GAAG,IAAI,IAAI,CAAC,CAAC;IACzB,IAAIC,KAAK,CAACC,OAAO,CAACnB,MAAM,CAAC,EAAE;MACvBiB,MAAM,CAACjB,MAAM,CAACA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;IAC7D;IACA,IAAIA,MAAM,KAAK,KAAK,EAAE;MAClBiB,MAAM,CAACJ,GAAG,CAAC,CAAC;IAChB;IACA,OAAOI,MAAM;EACjB;AACJ;AACA,eAAerB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}