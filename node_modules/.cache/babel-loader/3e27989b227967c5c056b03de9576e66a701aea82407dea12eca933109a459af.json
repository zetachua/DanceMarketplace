{"ast":null,"code":"// gif.js 0.2.1 - https://github.com/jnordberg/gif.js\n(function (f) {\n  if (typeof exports === \"object\" && typeof module !== \"undefined\") {\n    module.exports = f();\n  } else if (typeof define === \"function\" && define.amd) {\n    define([], f);\n  } else {\n    var g;\n    if (typeof window !== \"undefined\") {\n      g = window;\n    } else if (typeof global !== \"undefined\") {\n      g = global;\n    } else if (typeof self !== \"undefined\") {\n      g = self;\n    } else {\n      g = this;\n    }\n    g.GIF = f();\n  }\n})(function () {\n  var define, module, exports;\n  return function () {\n    function r(e, n, t) {\n      function o(i, f) {\n        if (!n[i]) {\n          if (!e[i]) {\n            var c = \"function\" == typeof require && require;\n            if (!f && c) return c(i, !0);\n            if (u) return u(i, !0);\n            var a = new Error(\"Cannot find module '\" + i + \"'\");\n            throw a.code = \"MODULE_NOT_FOUND\", a;\n          }\n          var p = n[i] = {\n            exports: {}\n          };\n          e[i][0].call(p.exports, function (r) {\n            var n = e[i][1][r];\n            return o(n || r);\n          }, p, p.exports, r, e, n, t);\n        }\n        return n[i].exports;\n      }\n      for (var u = \"function\" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);\n      return o;\n    }\n    return r;\n  }()({\n    1: [function (require, module, exports) {\n      function EventEmitter() {\n        this._events = this._events || {};\n        this._maxListeners = this._maxListeners || undefined;\n      }\n      module.exports = EventEmitter;\n      EventEmitter.EventEmitter = EventEmitter;\n      EventEmitter.prototype._events = undefined;\n      EventEmitter.prototype._maxListeners = undefined;\n      EventEmitter.defaultMaxListeners = 10;\n      EventEmitter.prototype.setMaxListeners = function (n) {\n        if (!isNumber(n) || n < 0 || isNaN(n)) throw TypeError(\"n must be a positive number\");\n        this._maxListeners = n;\n        return this;\n      };\n      EventEmitter.prototype.emit = function (type) {\n        var er, handler, len, args, i, listeners;\n        if (!this._events) this._events = {};\n        if (type === \"error\") {\n          if (!this._events.error || isObject(this._events.error) && !this._events.error.length) {\n            er = arguments[1];\n            if (er instanceof Error) {\n              throw er;\n            } else {\n              var err = new Error('Uncaught, unspecified \"error\" event. (' + er + \")\");\n              err.context = er;\n              throw err;\n            }\n          }\n        }\n        handler = this._events[type];\n        if (isUndefined(handler)) return false;\n        if (isFunction(handler)) {\n          switch (arguments.length) {\n            case 1:\n              handler.call(this);\n              break;\n            case 2:\n              handler.call(this, arguments[1]);\n              break;\n            case 3:\n              handler.call(this, arguments[1], arguments[2]);\n              break;\n            default:\n              args = Array.prototype.slice.call(arguments, 1);\n              handler.apply(this, args);\n          }\n        } else if (isObject(handler)) {\n          args = Array.prototype.slice.call(arguments, 1);\n          listeners = handler.slice();\n          len = listeners.length;\n          for (i = 0; i < len; i++) listeners[i].apply(this, args);\n        }\n        return true;\n      };\n      EventEmitter.prototype.addListener = function (type, listener) {\n        var m;\n        if (!isFunction(listener)) throw TypeError(\"listener must be a function\");\n        if (!this._events) this._events = {};\n        if (this._events.newListener) this.emit(\"newListener\", type, isFunction(listener.listener) ? listener.listener : listener);\n        if (!this._events[type]) this._events[type] = listener;else if (isObject(this._events[type])) this._events[type].push(listener);else this._events[type] = [this._events[type], listener];\n        if (isObject(this._events[type]) && !this._events[type].warned) {\n          if (!isUndefined(this._maxListeners)) {\n            m = this._maxListeners;\n          } else {\n            m = EventEmitter.defaultMaxListeners;\n          }\n          if (m && m > 0 && this._events[type].length > m) {\n            this._events[type].warned = true;\n            console.error(\"(node) warning: possible EventEmitter memory \" + \"leak detected. %d listeners added. \" + \"Use emitter.setMaxListeners() to increase limit.\", this._events[type].length);\n            if (typeof console.trace === \"function\") {\n              console.trace();\n            }\n          }\n        }\n        return this;\n      };\n      EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n      EventEmitter.prototype.once = function (type, listener) {\n        if (!isFunction(listener)) throw TypeError(\"listener must be a function\");\n        var fired = false;\n        function g() {\n          this.removeListener(type, g);\n          if (!fired) {\n            fired = true;\n            listener.apply(this, arguments);\n          }\n        }\n        g.listener = listener;\n        this.on(type, g);\n        return this;\n      };\n      EventEmitter.prototype.removeListener = function (type, listener) {\n        var list, position, length, i;\n        if (!isFunction(listener)) throw TypeError(\"listener must be a function\");\n        if (!this._events || !this._events[type]) return this;\n        list = this._events[type];\n        length = list.length;\n        position = -1;\n        if (list === listener || isFunction(list.listener) && list.listener === listener) {\n          delete this._events[type];\n          if (this._events.removeListener) this.emit(\"removeListener\", type, listener);\n        } else if (isObject(list)) {\n          for (i = length; i-- > 0;) {\n            if (list[i] === listener || list[i].listener && list[i].listener === listener) {\n              position = i;\n              break;\n            }\n          }\n          if (position < 0) return this;\n          if (list.length === 1) {\n            list.length = 0;\n            delete this._events[type];\n          } else {\n            list.splice(position, 1);\n          }\n          if (this._events.removeListener) this.emit(\"removeListener\", type, listener);\n        }\n        return this;\n      };\n      EventEmitter.prototype.removeAllListeners = function (type) {\n        var key, listeners;\n        if (!this._events) return this;\n        if (!this._events.removeListener) {\n          if (arguments.length === 0) this._events = {};else if (this._events[type]) delete this._events[type];\n          return this;\n        }\n        if (arguments.length === 0) {\n          for (key in this._events) {\n            if (key === \"removeListener\") continue;\n            this.removeAllListeners(key);\n          }\n          this.removeAllListeners(\"removeListener\");\n          this._events = {};\n          return this;\n        }\n        listeners = this._events[type];\n        if (isFunction(listeners)) {\n          this.removeListener(type, listeners);\n        } else if (listeners) {\n          while (listeners.length) this.removeListener(type, listeners[listeners.length - 1]);\n        }\n        delete this._events[type];\n        return this;\n      };\n      EventEmitter.prototype.listeners = function (type) {\n        var ret;\n        if (!this._events || !this._events[type]) ret = [];else if (isFunction(this._events[type])) ret = [this._events[type]];else ret = this._events[type].slice();\n        return ret;\n      };\n      EventEmitter.prototype.listenerCount = function (type) {\n        if (this._events) {\n          var evlistener = this._events[type];\n          if (isFunction(evlistener)) return 1;else if (evlistener) return evlistener.length;\n        }\n        return 0;\n      };\n      EventEmitter.listenerCount = function (emitter, type) {\n        return emitter.listenerCount(type);\n      };\n      function isFunction(arg) {\n        return typeof arg === \"function\";\n      }\n      function isNumber(arg) {\n        return typeof arg === \"number\";\n      }\n      function isObject(arg) {\n        return typeof arg === \"object\" && arg !== null;\n      }\n      function isUndefined(arg) {\n        return arg === void 0;\n      }\n    }, {}],\n    2: [function (require, module, exports) {\n      var UA, browser, mode, platform, ua;\n      ua = navigator.userAgent.toLowerCase();\n      platform = navigator.platform.toLowerCase();\n      UA = ua.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/) || [null, \"unknown\", 0];\n      mode = UA[1] === \"ie\" && document.documentMode;\n      browser = {\n        name: UA[1] === \"version\" ? UA[3] : UA[1],\n        version: mode || parseFloat(UA[1] === \"opera\" && UA[4] ? UA[4] : UA[2]),\n        platform: {\n          name: ua.match(/ip(?:ad|od|hone)/) ? \"ios\" : (ua.match(/(?:webos|android)/) || platform.match(/mac|win|linux/) || [\"other\"])[0]\n        }\n      };\n      browser[browser.name] = true;\n      browser[browser.name + parseInt(browser.version, 10)] = true;\n      browser.platform[browser.platform.name] = true;\n      module.exports = browser;\n    }, {}],\n    3: [function (require, module, exports) {\n      var EventEmitter,\n        GIF,\n        browser,\n        extend = function (child, parent) {\n          for (var key in parent) {\n            if (hasProp.call(parent, key)) child[key] = parent[key];\n          }\n          function ctor() {\n            this.constructor = child;\n          }\n          ctor.prototype = parent.prototype;\n          child.prototype = new ctor();\n          child.__super__ = parent.prototype;\n          return child;\n        },\n        hasProp = {}.hasOwnProperty,\n        indexOf = [].indexOf || function (item) {\n          for (var i = 0, l = this.length; i < l; i++) {\n            if (i in this && this[i] === item) return i;\n          }\n          return -1;\n        },\n        slice = [].slice;\n      EventEmitter = require(\"events\").EventEmitter;\n      browser = require(\"./browser.coffee\");\n      GIF = function (superClass) {\n        var defaults, frameDefaults;\n        extend(GIF, superClass);\n        defaults = {\n          workerScript: \"gif.worker.js\",\n          workers: 2,\n          repeat: 0,\n          background: \"#fff\",\n          quality: 10,\n          width: null,\n          height: null,\n          transparent: null,\n          debug: false,\n          dither: false\n        };\n        frameDefaults = {\n          delay: 500,\n          copy: false,\n          dispose: -1\n        };\n        function GIF(options) {\n          var base, key, value;\n          this.running = false;\n          this.options = {};\n          this.frames = [];\n          this.freeWorkers = [];\n          this.activeWorkers = [];\n          this.setOptions(options);\n          for (key in defaults) {\n            value = defaults[key];\n            if ((base = this.options)[key] == null) {\n              base[key] = value;\n            }\n          }\n        }\n        GIF.prototype.setOption = function (key, value) {\n          this.options[key] = value;\n          if (this._canvas != null && (key === \"width\" || key === \"height\")) {\n            return this._canvas[key] = value;\n          }\n        };\n        GIF.prototype.setOptions = function (options) {\n          var key, results, value;\n          results = [];\n          for (key in options) {\n            if (!hasProp.call(options, key)) continue;\n            value = options[key];\n            results.push(this.setOption(key, value));\n          }\n          return results;\n        };\n        GIF.prototype.addFrame = function (image, options) {\n          var frame, key;\n          if (options == null) {\n            options = {};\n          }\n          frame = {};\n          frame.transparent = this.options.transparent;\n          for (key in frameDefaults) {\n            frame[key] = options[key] || frameDefaults[key];\n          }\n          if (this.options.width == null) {\n            this.setOption(\"width\", image.width);\n          }\n          if (this.options.height == null) {\n            this.setOption(\"height\", image.height);\n          }\n          if (typeof ImageData !== \"undefined\" && ImageData !== null && image instanceof ImageData) {\n            frame.data = image.data;\n          } else if (typeof CanvasRenderingContext2D !== \"undefined\" && CanvasRenderingContext2D !== null && image instanceof CanvasRenderingContext2D || typeof WebGLRenderingContext !== \"undefined\" && WebGLRenderingContext !== null && image instanceof WebGLRenderingContext) {\n            if (options.copy) {\n              frame.data = this.getContextData(image);\n            } else {\n              frame.context = image;\n            }\n          } else if (image.childNodes != null) {\n            if (options.copy) {\n              frame.data = this.getImageData(image);\n            } else {\n              frame.image = image;\n            }\n          } else {\n            throw new Error(\"Invalid image\");\n          }\n          return this.frames.push(frame);\n        };\n        GIF.prototype.render = function () {\n          var i, j, numWorkers, ref;\n          if (this.running) {\n            throw new Error(\"Already running\");\n          }\n          if (this.options.width == null || this.options.height == null) {\n            throw new Error(\"Width and height must be set prior to rendering\");\n          }\n          this.running = true;\n          this.nextFrame = 0;\n          this.finishedFrames = 0;\n          this.imageParts = function () {\n            var j, ref, results;\n            results = [];\n            for (i = j = 0, ref = this.frames.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n              results.push(null);\n            }\n            return results;\n          }.call(this);\n          numWorkers = this.spawnWorkers();\n          if (this.options.globalPalette === true) {\n            this.renderNextFrame();\n          } else {\n            for (i = j = 0, ref = numWorkers; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n              this.renderNextFrame();\n            }\n          }\n          this.emit(\"start\");\n          return this.emit(\"progress\", 0);\n        };\n        GIF.prototype.abort = function () {\n          var worker;\n          while (true) {\n            worker = this.activeWorkers.shift();\n            if (worker == null) {\n              break;\n            }\n            this.log(\"killing active worker\");\n            worker.terminate();\n          }\n          this.running = false;\n          return this.emit(\"abort\");\n        };\n        GIF.prototype.spawnWorkers = function () {\n          var j, numWorkers, ref, results;\n          numWorkers = Math.min(this.options.workers, this.frames.length);\n          (function () {\n            results = [];\n            for (var j = ref = this.freeWorkers.length; ref <= numWorkers ? j < numWorkers : j > numWorkers; ref <= numWorkers ? j++ : j--) {\n              results.push(j);\n            }\n            return results;\n          }).apply(this).forEach(function (_this) {\n            return function (i) {\n              var worker;\n              _this.log(\"spawning worker \" + i);\n              worker = new Worker(_this.options.workerScript);\n              worker.onmessage = function (event) {\n                _this.activeWorkers.splice(_this.activeWorkers.indexOf(worker), 1);\n                _this.freeWorkers.push(worker);\n                return _this.frameFinished(event.data);\n              };\n              return _this.freeWorkers.push(worker);\n            };\n          }(this));\n          return numWorkers;\n        };\n        GIF.prototype.frameFinished = function (frame) {\n          var i, j, ref;\n          this.log(\"frame \" + frame.index + \" finished - \" + this.activeWorkers.length + \" active\");\n          this.finishedFrames++;\n          this.emit(\"progress\", this.finishedFrames / this.frames.length);\n          this.imageParts[frame.index] = frame;\n          if (this.options.globalPalette === true) {\n            this.options.globalPalette = frame.globalPalette;\n            this.log(\"global palette analyzed\");\n            if (this.frames.length > 2) {\n              for (i = j = 1, ref = this.freeWorkers.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {\n                this.renderNextFrame();\n              }\n            }\n          }\n          if (indexOf.call(this.imageParts, null) >= 0) {\n            return this.renderNextFrame();\n          } else {\n            return this.finishRendering();\n          }\n        };\n        GIF.prototype.finishRendering = function () {\n          var data, frame, i, image, j, k, l, len, len1, len2, len3, offset, page, ref, ref1, ref2;\n          len = 0;\n          ref = this.imageParts;\n          for (j = 0, len1 = ref.length; j < len1; j++) {\n            frame = ref[j];\n            len += (frame.data.length - 1) * frame.pageSize + frame.cursor;\n          }\n          len += frame.pageSize - frame.cursor;\n          this.log(\"rendering finished - filesize \" + Math.round(len / 1e3) + \"kb\");\n          data = new Uint8Array(len);\n          offset = 0;\n          ref1 = this.imageParts;\n          for (k = 0, len2 = ref1.length; k < len2; k++) {\n            frame = ref1[k];\n            ref2 = frame.data;\n            for (i = l = 0, len3 = ref2.length; l < len3; i = ++l) {\n              page = ref2[i];\n              data.set(page, offset);\n              if (i === frame.data.length - 1) {\n                offset += frame.cursor;\n              } else {\n                offset += frame.pageSize;\n              }\n            }\n          }\n          image = new Blob([data], {\n            type: \"image/gif\"\n          });\n          return this.emit(\"finished\", image, data);\n        };\n        GIF.prototype.renderNextFrame = function () {\n          var frame, task, worker;\n          if (this.freeWorkers.length === 0) {\n            throw new Error(\"No free workers\");\n          }\n          if (this.nextFrame >= this.frames.length) {\n            return;\n          }\n          frame = this.frames[this.nextFrame++];\n          worker = this.freeWorkers.shift();\n          task = this.getTask(frame);\n          this.log(\"starting frame \" + (task.index + 1) + \" of \" + this.frames.length);\n          this.activeWorkers.push(worker);\n          return worker.postMessage(task);\n        };\n        GIF.prototype.getContextData = function (ctx) {\n          return ctx.getImageData(0, 0, this.options.width, this.options.height).data;\n        };\n        GIF.prototype.getImageData = function (image) {\n          var ctx;\n          if (this._canvas == null) {\n            this._canvas = document.createElement(\"canvas\");\n            this._canvas.width = this.options.width;\n            this._canvas.height = this.options.height;\n          }\n          ctx = this._canvas.getContext(\"2d\");\n          ctx.setFill = this.options.background;\n          ctx.fillRect(0, 0, this.options.width, this.options.height);\n          ctx.drawImage(image, 0, 0);\n          return this.getContextData(ctx);\n        };\n        GIF.prototype.getTask = function (frame) {\n          var index, task;\n          index = this.frames.indexOf(frame);\n          task = {\n            index: index,\n            last: index === this.frames.length - 1,\n            delay: frame.delay,\n            dispose: frame.dispose,\n            transparent: frame.transparent,\n            width: this.options.width,\n            height: this.options.height,\n            quality: this.options.quality,\n            dither: this.options.dither,\n            globalPalette: this.options.globalPalette,\n            repeat: this.options.repeat,\n            canTransfer: browser.name === \"chrome\"\n          };\n          if (frame.data != null) {\n            task.data = frame.data;\n          } else if (frame.context != null) {\n            task.data = this.getContextData(frame.context);\n          } else if (frame.image != null) {\n            task.data = this.getImageData(frame.image);\n          } else {\n            throw new Error(\"Invalid frame\");\n          }\n          return task;\n        };\n        GIF.prototype.log = function () {\n          var args;\n          args = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n          if (!this.options.debug) {\n            return;\n          }\n          return console.log.apply(console, args);\n        };\n        return GIF;\n      }(EventEmitter);\n      module.exports = GIF;\n    }, {\n      \"./browser.coffee\": 2,\n      events: 1\n    }]\n  }, {}, [3])(3);\n});","map":{"version":3,"names":["f","exports","module","define","amd","g","window","global","self","GIF","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","EventEmitter","_events","_maxListeners","undefined","prototype","defaultMaxListeners","setMaxListeners","isNumber","isNaN","TypeError","emit","type","er","handler","len","args","listeners","error","isObject","arguments","err","context","isUndefined","isFunction","Array","slice","apply","addListener","listener","m","newListener","push","warned","console","trace","on","once","fired","removeListener","list","position","splice","removeAllListeners","key","ret","listenerCount","evlistener","emitter","arg","UA","browser","mode","platform","ua","navigator","userAgent","toLowerCase","match","document","documentMode","name","version","parseFloat","parseInt","extend","child","parent","hasProp","ctor","constructor","__super__","hasOwnProperty","indexOf","item","l","superClass","defaults","frameDefaults","workerScript","workers","repeat","background","quality","width","height","transparent","debug","dither","delay","copy","dispose","options","base","value","running","frames","freeWorkers","activeWorkers","setOptions","setOption","_canvas","results","addFrame","image","frame","ImageData","data","CanvasRenderingContext2D","WebGLRenderingContext","getContextData","childNodes","getImageData","render","j","numWorkers","ref","nextFrame","finishedFrames","imageParts","spawnWorkers","globalPalette","renderNextFrame","abort","worker","shift","log","terminate","Math","min","forEach","_this","Worker","onmessage","event","frameFinished","index","finishRendering","k","len1","len2","len3","offset","page","ref1","ref2","pageSize","cursor","round","Uint8Array","set","Blob","task","getTask","postMessage","ctx","createElement","getContext","setFill","fillRect","drawImage","last","canTransfer","events"],"sources":["/Users/zetachua/Documents/GitHub/DanceMarketplace/node_modules/gif.js-upgrade/dist/node_modules/browser-pack/_prelude.js","/Users/zetachua/Documents/GitHub/DanceMarketplace/node_modules/gif.js-upgrade/dist/node_modules/events/events.js","/Users/zetachua/Documents/GitHub/DanceMarketplace/node_modules/gif.js-upgrade/dist/src/browser.coffee","/Users/zetachua/Documents/GitHub/DanceMarketplace/node_modules/gif.js-upgrade/dist/src/gif.coffee"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","### CoffeeScript version of the browser detection from MooTools ###\n\nua = navigator.userAgent.toLowerCase()\nplatform = navigator.platform.toLowerCase()\nUA = ua.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/) or [null, 'unknown', 0]\nmode = UA[1] == 'ie' && document.documentMode\n\nbrowser =\n  name: if UA[1] is 'version' then UA[3] else UA[1]\n  version: mode or parseFloat(if UA[1] is 'opera' && UA[4] then UA[4] else UA[2])\n\n  platform:\n    name: if ua.match(/ip(?:ad|od|hone)/) then 'ios' else (ua.match(/(?:webos|android)/) or platform.match(/mac|win|linux/) or ['other'])[0]\n\nbrowser[browser.name] = true\nbrowser[browser.name + parseInt(browser.version, 10)] = true\nbrowser.platform[browser.platform.name] = true\n\nmodule.exports = browser\n","{EventEmitter} = require 'events'\nbrowser = require './browser.coffee'\n\nclass GIF extends EventEmitter\n\n  defaults =\n    workerScript: 'gif.worker.js'\n    workers: 2\n    repeat: 0 # repeat forever, -1 = repeat once\n    background: '#fff'\n    quality: 10 # pixel sample interval, lower is better\n    width: null # size derermined from first frame if possible\n    height: null\n    transparent: null\n    debug: false\n    dither: false # see GIFEncoder.js for dithering options\n\n  frameDefaults =\n    delay: 500 # ms\n    copy: false\n    dispose: -1\n\n  constructor: (options) ->\n    @running = false\n\n    @options = {}\n    @frames = []\n\n    @freeWorkers = []\n    @activeWorkers = []\n\n    @setOptions options\n    for key, value of defaults\n      @options[key] ?= value\n\n  setOption: (key, value) ->\n    @options[key] = value\n    if @_canvas? and key in ['width', 'height']\n      @_canvas[key] = value\n\n  setOptions: (options) ->\n    @setOption key, value for own key, value of options\n\n  addFrame: (image, options={}) ->\n    frame = {}\n    frame.transparent = @options.transparent\n    for key of frameDefaults\n      frame[key] = options[key] or frameDefaults[key]\n\n    # use the images width and height for options unless already set\n    @setOption 'width', image.width unless @options.width?\n    @setOption 'height', image.height unless @options.height?\n\n    if ImageData? and image instanceof ImageData\n       frame.data = image.data\n    else if (CanvasRenderingContext2D? and image instanceof CanvasRenderingContext2D) or (WebGLRenderingContext? and image instanceof WebGLRenderingContext)\n      if options.copy\n        frame.data = @getContextData image\n      else\n        frame.context = image\n    else if image.childNodes?\n      if options.copy\n        frame.data = @getImageData image\n      else\n        frame.image = image\n    else\n      throw new Error 'Invalid image'\n\n    @frames.push frame\n\n  render: ->\n    throw new Error 'Already running' if @running\n\n    if not @options.width? or not @options.height?\n      throw new Error 'Width and height must be set prior to rendering'\n\n    @running = true\n    @nextFrame = 0\n    @finishedFrames = 0\n\n    @imageParts = (null for i in [0...@frames.length])\n    numWorkers = @spawnWorkers()\n    # we need to wait for the palette\n    if @options.globalPalette == true\n      @renderNextFrame()\n    else\n      @renderNextFrame() for i in [0...numWorkers]\n\n    @emit 'start'\n    @emit 'progress', 0\n\n  abort: ->\n    loop\n      worker = @activeWorkers.shift()\n      break unless worker?\n      @log 'killing active worker'\n      worker.terminate()\n    @running = false\n    @emit 'abort'\n\n  # private\n\n  spawnWorkers: ->\n    numWorkers = Math.min(@options.workers, @frames.length)\n    [@freeWorkers.length...numWorkers].forEach (i) =>\n      @log \"spawning worker #{ i }\"\n      worker = new Worker @options.workerScript\n      worker.onmessage = (event) =>\n        @activeWorkers.splice @activeWorkers.indexOf(worker), 1\n        @freeWorkers.push worker\n        @frameFinished event.data\n      @freeWorkers.push worker\n    return numWorkers\n\n  frameFinished: (frame) ->\n    @log \"frame #{ frame.index } finished - #{ @activeWorkers.length } active\"\n    @finishedFrames++\n    @emit 'progress', @finishedFrames / @frames.length\n    @imageParts[frame.index] = frame\n    # remember calculated palette, spawn the rest of the workers\n    if @options.globalPalette == true\n      @options.globalPalette = frame.globalPalette\n      @log 'global palette analyzed'\n      @renderNextFrame() for i in [1...@freeWorkers.length] if @frames.length > 2\n    if null in @imageParts\n      @renderNextFrame()\n    else\n      @finishRendering()\n\n  finishRendering: ->\n    len = 0\n    for frame in @imageParts\n      len += (frame.data.length - 1) * frame.pageSize + frame.cursor\n    len += frame.pageSize - frame.cursor\n    @log \"rendering finished - filesize #{ Math.round(len / 1000) }kb\"\n    data = new Uint8Array len\n    offset = 0\n    for frame in @imageParts\n      for page, i in frame.data\n        data.set page, offset\n        if i is frame.data.length - 1\n          offset += frame.cursor\n        else\n          offset += frame.pageSize\n\n    image = new Blob [data],\n      type: 'image/gif'\n\n    @emit 'finished', image, data\n\n  renderNextFrame: ->\n    throw new Error 'No free workers' if @freeWorkers.length is 0\n    return if @nextFrame >= @frames.length # no new frame to render\n\n    frame = @frames[@nextFrame++]\n    worker = @freeWorkers.shift()\n    task = @getTask frame\n\n    @log \"starting frame #{ task.index + 1 } of #{ @frames.length }\"\n    @activeWorkers.push worker\n    worker.postMessage task#, [task.data.buffer]\n\n  getContextData: (ctx) ->\n    return ctx.getImageData(0, 0, @options.width, @options.height).data\n\n  getImageData: (image) ->\n    if not @_canvas?\n      @_canvas = document.createElement 'canvas'\n      @_canvas.width = @options.width\n      @_canvas.height = @options.height\n\n    ctx = @_canvas.getContext '2d'\n    ctx.setFill = @options.background\n    ctx.fillRect 0, 0, @options.width, @options.height\n    ctx.drawImage image, 0, 0\n\n    return @getContextData ctx\n\n  getTask: (frame) ->\n    index = @frames.indexOf frame\n    task =\n      index: index\n      last: index is (@frames.length - 1)\n      delay: frame.delay\n      dispose: frame.dispose\n      transparent: frame.transparent\n      width: @options.width\n      height: @options.height\n      quality: @options.quality\n      dither: @options.dither\n      globalPalette: @options.globalPalette\n      repeat: @options.repeat\n      canTransfer: (browser.name is 'chrome')\n\n    if frame.data?\n      task.data = frame.data\n    else if frame.context?\n      task.data = @getContextData frame.context\n    else if frame.image?\n      task.data = @getImageData frame.image\n    else\n      throw new Error 'Invalid frame'\n\n    return task\n\n  log: (args...) ->\n    return unless @options.debug\n    console.log args...\n\n\nmodule.exports = GIF\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}