{"ast":null,"code":"const convertWebMToGIF = webmBlob => {\n  const videoElement = document.createElement('video');\n  videoElement.src = URL.createObjectURL(webmBlob);\n  videoElement.addEventListener('loadeddata', async () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.floor(videoElement.videoWidth / 2); // Adjust width as needed\n    canvas.height = Math.floor(videoElement.videoHeight / 2); // Adjust height as needed\n\n    const ctx = canvas.getContext('2d');\n    const gif = new GIF({\n      workers: 2,\n      quality: 10\n    }); // Adjust workers and quality as needed\n\n    for (let i = 0; i < videoElement.duration * 25; i++) {\n      // Adjust frame rate as needed\n      ctx.drawImage(videoElement, 0, 0, videoElement.videoWidth, videoElement.videoHeight, 0, 0, canvas.width, canvas.height);\n      gif.addFrame(ctx, {\n        copy: true,\n        delay: 40\n      }); // Adjust the delay as needed (25 frames per second)\n    }\n\n    gif.on('finished', blob => {\n      const gifUrl = URL.createObjectURL(blob);\n      videoRef.current.src = gifUrl;\n    });\n    gif.render();\n  });\n};","map":{"version":3,"names":["convertWebMToGIF","webmBlob","videoElement","document","createElement","src","URL","createObjectURL","addEventListener","canvas","width","Math","floor","videoWidth","height","videoHeight","ctx","getContext","gif","GIF","workers","quality","i","duration","drawImage","addFrame","copy","delay","on","blob","gifUrl","videoRef","current","render"],"sources":["/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/ScreenrecordToGif/screenRecordToGif.js"],"sourcesContent":["const convertWebMToGIF = (webmBlob) => {\n  const videoElement = document.createElement('video');\n  videoElement.src = URL.createObjectURL(webmBlob);\n  videoElement.addEventListener('loadeddata', async () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.floor(videoElement.videoWidth / 2); // Adjust width as needed\n    canvas.height = Math.floor(videoElement.videoHeight / 2); // Adjust height as needed\n\n    const ctx = canvas.getContext('2d');\n    const gif = new GIF({ workers: 2, quality: 10 }); // Adjust workers and quality as needed\n\n    for (let i = 0; i < videoElement.duration * 25; i++) { // Adjust frame rate as needed\n      ctx.drawImage(\n        videoElement,\n        0,\n        0,\n        videoElement.videoWidth,\n        videoElement.videoHeight,\n        0,\n        0,\n        canvas.width,\n        canvas.height\n      );\n      gif.addFrame(ctx, { copy: true, delay: 40 }); // Adjust the delay as needed (25 frames per second)\n    }\n\n    gif.on('finished', (blob) => {\n      const gifUrl = URL.createObjectURL(blob);\n      videoRef.current.src = gifUrl;\n    });\n\n    gif.render();\n  });\n};\n"],"mappings":"AAAA,MAAMA,gBAAgB,GAAIC,QAAQ,IAAK;EACrC,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,OAAO,CAAC;EACpDF,YAAY,CAACG,GAAG,GAAGC,GAAG,CAACC,eAAe,CAACN,QAAQ,CAAC;EAChDC,YAAY,CAACM,gBAAgB,CAAC,YAAY,EAAE,YAAY;IACtD,MAAMC,MAAM,GAAGN,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CK,MAAM,CAACC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACV,YAAY,CAACW,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC;IACxDJ,MAAM,CAACK,MAAM,GAAGH,IAAI,CAACC,KAAK,CAACV,YAAY,CAACa,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;;IAE1D,MAAMC,GAAG,GAAGP,MAAM,CAACQ,UAAU,CAAC,IAAI,CAAC;IACnC,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAC;MAAEC,OAAO,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAG,CAAC,CAAC,CAAC,CAAC;;IAElD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGpB,YAAY,CAACqB,QAAQ,GAAG,EAAE,EAAED,CAAC,EAAE,EAAE;MAAE;MACrDN,GAAG,CAACQ,SAAS,CACXtB,YAAY,EACZ,CAAC,EACD,CAAC,EACDA,YAAY,CAACW,UAAU,EACvBX,YAAY,CAACa,WAAW,EACxB,CAAC,EACD,CAAC,EACDN,MAAM,CAACC,KAAK,EACZD,MAAM,CAACK,MACT,CAAC;MACDI,GAAG,CAACO,QAAQ,CAACT,GAAG,EAAE;QAAEU,IAAI,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC,CAAC,CAAC;IAChD;;IAEAT,GAAG,CAACU,EAAE,CAAC,UAAU,EAAGC,IAAI,IAAK;MAC3B,MAAMC,MAAM,GAAGxB,GAAG,CAACC,eAAe,CAACsB,IAAI,CAAC;MACxCE,QAAQ,CAACC,OAAO,CAAC3B,GAAG,GAAGyB,MAAM;IAC/B,CAAC,CAAC;IAEFZ,GAAG,CAACe,MAAM,CAAC,CAAC;EACd,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}