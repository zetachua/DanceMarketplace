{"ast":null,"code":"var _jsxFileName = \"/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/ScreenrecordToGif/screenRecordToGif.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport Whammy from 'whammy';\nimport GIF from 'gif.js-upgrade';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScreenRecorderWithGIFConversion = () => {\n  _s();\n  const videoRef = useRef();\n  const [recording, setRecording] = useState(false);\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({\n        video: true\n      });\n      const recorder = new MediaRecorder(stream);\n      const chunks = [];\n      recorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n      recorder.onstop = () => {\n        const webmBlob = new Blob(chunks, {\n          type: 'video/webm'\n        });\n        const webmUrl = URL.createObjectURL(webmBlob);\n        videoRef.current.src = webmUrl;\n        convertWebMToGIF(webmBlob);\n      };\n      recorder.start();\n      setRecording(true);\n      setTimeout(() => {\n        recorder.stop();\n        stream.getTracks().forEach(track => track.stop());\n        setRecording(false);\n      }, 5000); // Recording for exactly 5 seconds\n    } catch (error) {\n      console.error('Error starting recording:', error);\n    }\n  };\n  const convertWebMToGIF = webmBlob => {\n    const videoElement = document.createElement('video');\n    videoElement.src = URL.createObjectURL(webmBlob);\n    videoElement.addEventListener('loadeddata', async () => {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      const gif = new GIF({\n        workers: 2,\n        quality: 10\n      });\n\n      // Set canvas dimensions to a lower resolution\n      const canvasWidth = Math.floor(videoElement.videoWidth / 2);\n      const canvasHeight = Math.floor(videoElement.videoHeight / 2);\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n      for (let i = 0; i < videoElement.duration * 25; i++) {\n        ctx.drawImage(videoElement, 0, 0, videoElement.videoWidth, videoElement.videoHeight, 0, 0, canvasWidth, canvasHeight);\n\n        // Convert the canvas toDataURL to reduce memory usage\n        const imageDataUrl = canvas.toDataURL('image/png');\n\n        // Create an image element from the data URL\n        const image = new Image();\n        image.src = imageDataUrl;\n\n        // Add the image as a frame to the GIF\n        gif.addFrame(image, {\n          delay: 40\n        }); // Adjust the delay as needed (25 frames per second)\n      }\n\n      gif.on('finished', blob => {\n        const gifUrl = URL.createObjectURL(blob);\n        videoRef.current.src = gifUrl;\n      });\n      gif.render();\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startRecording,\n      disabled: recording,\n      children: recording ? 'Recording...' : 'Start Recording'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      controls: true,\n      style: {\n        height: '100px',\n        marginTop: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(ScreenRecorderWithGIFConversion, \"JLHxrYDiFRBqQRzccvySQ7gjsCg=\");\n_c = ScreenRecorderWithGIFConversion;\nexport default ScreenRecorderWithGIFConversion;\nvar _c;\n$RefreshReg$(_c, \"ScreenRecorderWithGIFConversion\");","map":{"version":3,"names":["React","useRef","useState","Whammy","GIF","jsxDEV","_jsxDEV","ScreenRecorderWithGIFConversion","_s","videoRef","recording","setRecording","startRecording","stream","navigator","mediaDevices","getDisplayMedia","video","recorder","MediaRecorder","chunks","ondataavailable","event","data","size","push","onstop","webmBlob","Blob","type","webmUrl","URL","createObjectURL","current","src","convertWebMToGIF","start","setTimeout","stop","getTracks","forEach","track","error","console","videoElement","document","createElement","addEventListener","canvas","ctx","getContext","gif","workers","quality","canvasWidth","Math","floor","videoWidth","canvasHeight","videoHeight","width","height","i","duration","drawImage","imageDataUrl","toDataURL","image","Image","addFrame","delay","on","blob","gifUrl","render","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","ref","controls","style","marginTop","_c","$RefreshReg$"],"sources":["/Users/zetachua/Documents/GitHub/DanceMarketplace/src/Components/ScreenrecordToGif/screenRecordToGif.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\nimport Whammy from 'whammy';\nimport GIF from 'gif.js-upgrade';\n\nconst ScreenRecorderWithGIFConversion = () => {\n  const videoRef = useRef();\n  const [recording, setRecording] = useState(false);\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n      const recorder = new MediaRecorder(stream);\n\n      const chunks = [];\n      recorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          chunks.push(event.data);\n        }\n      };\n\n      recorder.onstop = () => {\n        const webmBlob = new Blob(chunks, { type: 'video/webm' });\n        const webmUrl = URL.createObjectURL(webmBlob);\n        videoRef.current.src = webmUrl;\n\n        convertWebMToGIF(webmBlob);\n      };\n\n      recorder.start();\n      setRecording(true);\n\n      setTimeout(() => {\n        recorder.stop();\n        stream.getTracks().forEach((track) => track.stop());\n        setRecording(false);\n      }, 5000); // Recording for exactly 5 seconds\n    } catch (error) {\n      console.error('Error starting recording:', error);\n    }\n  };\n\n  const convertWebMToGIF = (webmBlob) => {\n    const videoElement = document.createElement('video');\n    videoElement.src = URL.createObjectURL(webmBlob);\n    videoElement.addEventListener('loadeddata', async () => {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n  \n      const gif = new GIF({ workers: 2, quality: 10 });\n  \n      // Set canvas dimensions to a lower resolution\n      const canvasWidth = Math.floor(videoElement.videoWidth / 2);\n      const canvasHeight = Math.floor(videoElement.videoHeight / 2);\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n  \n      for (let i = 0; i < videoElement.duration * 25; i++) {\n        ctx.drawImage(\n          videoElement,\n          0,\n          0,\n          videoElement.videoWidth,\n          videoElement.videoHeight,\n          0,\n          0,\n          canvasWidth,\n          canvasHeight\n        );\n   \n        // Convert the canvas toDataURL to reduce memory usage\n        const imageDataUrl = canvas.toDataURL('image/png');\n  \n        // Create an image element from the data URL\n        const image = new Image();\n        image.src = imageDataUrl;\n  \n        // Add the image as a frame to the GIF\n        gif.addFrame(image, { delay: 40 }); // Adjust the delay as needed (25 frames per second)\n      }\n  \n      gif.on('finished', (blob) => {\n        const gifUrl = URL.createObjectURL(blob);\n        videoRef.current.src = gifUrl;\n      });\n  \n      gif.render();\n    });\n  };\n  \n  \n\n  return (\n    <div>\n      <button onClick={startRecording} disabled={recording}>\n        {recording ? 'Recording...' : 'Start Recording'}\n      </button>\n      <video ref={videoRef} controls style={{ height:'100px',marginTop: '10px' }} />\n    </div>\n  );\n};\n\nexport default ScreenRecorderWithGIFConversion;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}